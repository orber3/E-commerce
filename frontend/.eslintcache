[{"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Header.js":"3","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Footer.js":"4","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\products.js":"6","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\product.js":"7","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Product.js":"8","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Rating.js":"9","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ProductScreens.js":"10","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\store.js":"11","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\productReducer.js":"12","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\productConstans.js":"14","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Loader.js":"15","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Message.js":"16","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\CartReducer.js":"18","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\CartConstants.js":"19","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\cartAction.js":"20","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\userReducer.js":"21","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\UserConstants.js":"22","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\userLoginScreen.js":"23","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\userAction.js":"24","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\FormContainer.js":"25","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\registerReducer copy.js":"26","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\registerScreen.js":"27","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\checkOutSteps.js":"30","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js":"31","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"32","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\orderReducer.js":"33","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\orderConstants.js":"34","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\orderAction.js":"35","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\orderScreen.js":"36"},{"size":314,"mtime":1608305753085,"results":"37","hashOfConfig":"38"},{"size":1539,"mtime":1608989242337,"results":"39","hashOfConfig":"38"},{"size":1608,"mtime":1608657477149,"results":"40","hashOfConfig":"38"},{"size":358,"mtime":1608211734294,"results":"41","hashOfConfig":"38"},{"size":1141,"mtime":1608310513137,"results":"42","hashOfConfig":"38"},{"size":2486,"mtime":1608280629717,"results":"43","hashOfConfig":"38"},{"size":377,"mtime":1608282803821,"results":"44","hashOfConfig":"45"},{"size":1051,"mtime":1608285483742,"results":"46","hashOfConfig":"38"},{"size":1703,"mtime":1608284613225,"results":"47","hashOfConfig":"38"},{"size":4889,"mtime":1608375949689,"results":"48","hashOfConfig":"38"},{"size":1692,"mtime":1609003891933,"results":"49","hashOfConfig":"38"},{"size":1170,"mtime":1608311582162,"results":"50","hashOfConfig":"38"},{"size":1213,"mtime":1608311315153,"results":"51","hashOfConfig":"38"},{"size":368,"mtime":1608367435967,"results":"52","hashOfConfig":"38"},{"size":382,"mtime":1608368571860,"results":"53","hashOfConfig":"38"},{"size":285,"mtime":1608310543945,"results":"54","hashOfConfig":"38"},{"size":3295,"mtime":1608378024109,"results":"55","hashOfConfig":"38"},{"size":1588,"mtime":1608975652783,"results":"56","hashOfConfig":"38"},{"size":236,"mtime":1608897924285,"results":"57","hashOfConfig":"38"},{"size":1360,"mtime":1608975706649,"results":"58","hashOfConfig":"38"},{"size":1801,"mtime":1608893313200,"results":"59","hashOfConfig":"38"},{"size":826,"mtime":1608892144302,"results":"60","hashOfConfig":"38"},{"size":2383,"mtime":1609005470025,"results":"61","hashOfConfig":"38"},{"size":4015,"mtime":1608893268708,"results":"62","hashOfConfig":"38"},{"size":419,"mtime":1608488240171,"results":"63","hashOfConfig":"38"},{"size":591,"mtime":1608890298644,"results":"64","hashOfConfig":"38"},{"size":3254,"mtime":1608891326060,"results":"65","hashOfConfig":"38"},{"size":3562,"mtime":1608893414867,"results":"66","hashOfConfig":"38"},{"size":2660,"mtime":1608897298958,"results":"67","hashOfConfig":"38"},{"size":1540,"mtime":1608974481008,"results":"68","hashOfConfig":"38"},{"size":1685,"mtime":1608980018570,"results":"69","hashOfConfig":"38"},{"size":6614,"mtime":1608982020199,"results":"70","hashOfConfig":"38"},{"size":1938,"mtime":1609003809604,"results":"71","hashOfConfig":"38"},{"size":557,"mtime":1609003634581,"results":"72","hashOfConfig":"38"},{"size":2733,"mtime":1609005004502,"results":"73","hashOfConfig":"38"},{"size":6945,"mtime":1609006382125,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"zgh61z",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8jsfuv",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\index.js",[],["156","157"],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Header.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Footer.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js",["158","159"],"import React,{useEffect, useState} from 'react'\r\nimport { Row ,  Col} from 'react-bootstrap'\r\nimport {Product} from '../component/Product'\r\nimport axios from 'axios'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport {listProducts} from '../actions/productActions'\r\nimport Loader from '../component/Loader'\r\nimport Message from '../component/Message'\r\n\r\nconst HomeScreen = () => {\r\nconst dispatch = useDispatch()\r\nconst productList = useSelector(state => state.productlist)\r\nconst{loading , error , products} = productList\r\n\r\n\r\n    useEffect(() => {\r\n       dispatch(listProducts())\r\n\r\n    },[dispatch])\r\n\r\n\r\n    return (\r\n<>\r\n            <h1> products</h1>\r\n            { loading ? (<Loader /> )\r\n              : error ? ( <Message variant = 'danger'> {error} </Message> )\r\n              : (\r\n            \r\n            <Row> \r\n            {products.map(product => (\r\n\r\n                    <Col key = {product._id} sm={12} md={6} lg={3} >\r\n                     <Product product={product} /> \r\n                    </Col>\r\n        ))}\r\n\r\n        </Row>\r\n              )\r\n          \r\n}\r\n</>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\products.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\product.js",["160"],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Product.js",["161"],"import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport products from '../products'\r\nimport Rating from './Rating'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Product = ({product}) => {\r\n    return (\r\n       <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n        </Link>\r\n\r\n        <Card.Body> \r\n        <Link to={`/product/${product._id}`}>\r\n            <Card.Title as='div'>\r\n                <strong>{product.name}</strong>\r\n            </Card.Title>\r\n                    </Link>\r\n<Card.Text as='div'> \r\n       <Rating value = {product.rating} text={product.numReview} reviews/>\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price} </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n        \r\n    )\r\n}\r\n\r\nRating.defaultProps = { \r\n    color: '#f8e825'\r\n}\r\nRating.prototype = { \r\nvalue: PropTypes.number.isRequired,\r\ntext: PropTypes.string.isRequired,\r\ncolor: PropTypes.string,\r\n\r\n}","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Rating.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ProductScreens.js",["162","163"],"import React,{useState , useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport {Row , Col, ListGroup, ListGroupItem , Card , Button , Image , Form} from 'react-bootstrap'\r\nimport Rating from '../component/Rating'\r\nimport {listProductsDetail} from '../actions/productActions'\r\nimport Loader from '../component/Loader'\r\nimport Message from '../component/Message'\r\n\r\n\r\n\r\nconst ProductScreens = ({match , history}) => {\r\nconst [qty ,setQty]  = useState(1)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(listProductsDetail(match.params.id))\r\n     },dispatch , [match])\r\n     const ProductDetail = useSelector(state => state.ProductDetail)\r\n        const {loading , error ,product} = ProductDetail\r\n\r\n\r\n\r\nconst addToCartHandler = () => { \r\nhistory.push(`/cart/${match.params.id}?qty=${qty} `)\r\n\r\n}\r\n\r\n    return (\r\n        <>\r\n                <Link className = 'btn btn-dark my-3' to='/' > go back</Link>\r\n                {loading? <Loader /> : error ? <Message variant = 'danger'>{error} </Message> \r\n                : (\r\n                \r\n                    <Row> \r\n                    <Col md=\"6\">\r\n                    <Image src = {product.image} alt={product.name} fluid />\r\n    \r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                        <ListGroup variant = 'flush'> \r\n                            <ListGroupItem> \r\n                                <h3> {product.name} </h3>\r\n                            </ListGroupItem>\r\n                        <ListGroupItem> \r\n                        <Rating value = {product.rating} text= {`${product.numReviews} reviews`} /> \r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            price: ${product.price}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            description: ${product.description}\r\n                        </ListGroupItem>\r\n    \r\n    \r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}> \r\n                    <Card> \r\n                    <ListGroup variant = 'flush'> \r\n                        <ListGroupItem>\r\n                            <Row> \r\n                                <Col> \r\n                                    Price:\r\n                                </Col>\r\n                                <Col> \r\n                                <strong> \r\n                                {product.price}\r\n                                </strong>\r\n                                </Col>\r\n    \r\n                            </Row>\r\n                            </ListGroupItem> \r\n                            <ListGroupItem>\r\n                            <Row> \r\n                                <Col> \r\n                                    Status:\r\n                                </Col>\r\n                                <Col> \r\n                                <strong> \r\n                                {product.countInStock > 0 ? 'In stock' : 'Out of stock'}\r\n                                </strong>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            </ListGroupItem> \r\n                            {product.countInStock > 0 && ( \r\n                                <ListGroupItem> \r\n                                <Row>\r\n                                    <Col> QTY </Col>\r\n                                    <Col>\r\n                                    <Form.Control as='select' value={qty} onChange={(e)=> setQty(e.target.value)}>\r\n                                        {\r\n                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                            <option key = {x + 1 }> {x +1 } </option>\r\n                                        )) }\r\n                                    </Form.Control>\r\n                                     </Col>\r\n                                            </Row> \r\n\r\n                                </ListGroupItem>\r\n\r\n                            )}\r\n                                <ListGroupItem>\r\n                                    <Button className = 'btn-block' type='Button' \r\n                                    disabled={product.countInStock === 0}\r\n                                    onClick = {addToCartHandler}\r\n                                    \r\n                                    >  Add to cart </Button> \r\n                                    \r\n                                    </ListGroupItem> \r\n    \r\n    \r\n                    </ListGroup>\r\n    \r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n               \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreens\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\store.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\productReducer.js",["164","165","166"],"import {PRODUCT_LIST_FAIL ,PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from '../CONSTANTS/productConstans'\r\nimport {PRODUCT_DETAILS_FAIL \r\n    ,PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS } from '../CONSTANTS/productConstans'\r\n\r\n\r\n\r\n\r\n\r\nexport const productListReducer = ( state= {products: []} , action) => { \r\n\r\nswitch(action.type) { \r\n\r\n    case 'PRODUCT_LIST_REQUEST':\r\n    return { loading: true , products: [] }\r\n    \r\n    case 'PRODUCT_LIST_SUCCESS':\r\n    return { loading: false , products: action.payload }\r\n\r\n    case 'PRODUCT_LIST_FAIL':\r\n    return { loading: false , error: action.payload }\r\n\r\n    default:\r\n        return state\r\n\r\n\r\n}\r\n\r\n}\r\nexport const productDetailReducer = ( state = {product: { reviews: [] } } , action ) => { \r\n\r\n    switch(action.type) { \r\n    \r\n        case PRODUCT_DETAILS_REQUEST:\r\n        return { loading: true , ...state }\r\n        \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false , product: action.payload }\r\n    \r\n        case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false , error: action.payload }\r\n    \r\n        default:\r\n            return state\r\n    \r\n    \r\n    }\r\n    \r\n    }","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\productConstans.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Loader.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\Message.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\CartScreen.js",["167"],"import React , {useEffect} from 'react'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../component/Message'\r\nimport {Row , Col, ListGroup, ListGroupItem , Card , Button , Image , Form} from 'react-bootstrap'\r\nimport {addToCart, removeFromCart} from '../actions/cartAction'\r\n\r\n\r\n\r\nconst CartScreen = ({match , location , history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\nconsole.log(cart)\r\n\r\nconst productId = match.params.id\r\n//מוציא את הכמות מכתובת הלינק , מבצע ספליט אחרי סימן '=' ואת הכתובת הראשונה. מעביר למספר , אחרת שווה 1\r\nconst qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\nuseEffect(() =>  { \r\nif(productId) { \r\n\r\n    dispatch(addToCart(productId ,qty))\r\n}\r\n\r\n}, [dispatch , productId , qty])\r\n\r\n\r\nconst RemoveFromCartHandler = (id) => { \r\n\r\ndispatch(removeFromCart(id))}\r\n\r\nconst checkOutHandler = (item) => { \r\n\r\nhistory.push('login?redirect=shipping')\r\n}\r\n\r\n    return (\r\n<Row>\r\n    <Col md={8}> \r\n    <h1> Shopping Cart</h1>\r\n    {cartItems.length === 0 ? ( <Message>your cart is empty <Link to= '/' > Go Back </Link>  </Message> \r\n  ) : (\r\n        <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                <Col md={3}> \r\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                </Col>\r\n                <Col md={2}> \r\n                $ {item.price}\r\n                </Col>\r\n                <Col md={2}>\r\n                <Form.Control as='select' value={item.qty} onChange={(e)=> dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                                        {\r\n                                        [...Array(item.countInStock).keys()].map((x) => (\r\n                                            <option key = {x + 1 }> {x + 1 } </option>\r\n                                        )) }\r\n                                    </Form.Control>\r\n                </Col>\r\n                    <Col md={2}>\r\n                            <Button type ='button' variant='light' onClick = {() => RemoveFromCartHandler(item.product)} />\r\n                                            <i className ='fas fa-trash' /> \r\n                    </Col>\r\n            </Row>\r\n\r\n        </ListGroup.Item>\r\n            ))}\r\n\r\n \r\n         \r\n        </ListGroup>\r\n  )}\r\n    </Col>\r\n\r\n\r\n    <Col md={4}>\r\n<Card>\r\n  <ListGroup variant='flush'>\r\n    <ListGroup.Item>\r\n      <h2>\r\n        Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n        items\r\n      </h2>\r\n ${cartItems.reduce((acc, item) => acc+item.qty * item.price,0).toFixed(2)}\r\n    </ListGroup.Item>\r\n    <ListGroup.Item> \r\n    <Button type='button' className='btn-block' disabled={cartItems.length===0} onClick={checkOutHandler}>\r\n        Proceed to checkout\r\n    </Button>\r\n\r\n    </ListGroup.Item>\r\n    </ListGroup>\r\n    </Card>\r\n    </Col>\r\n\r\n</Row>\r\n    )\r\n}\r\nexport default CartScreen\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\CartReducer.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\CartConstants.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\UserConstants.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\userLoginScreen.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\FormContainer.js",["168"],"import React from 'react'\r\nimport {Container , Row , Form , Col} from 'react-bootstrap'\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className = 'justify-conent-md-center'>\r\n                <Col xs = {12} md={6}>\r\n                {children}\r\n\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\registerReducer copy.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\registerScreen.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js",["169","170"],"import React,{useEffect, useState} from 'react'\r\nimport { Row ,  Col,Form ,Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../component/Loader'\r\nimport Message from '../component/Message'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport {getUserDetails,updateUserProfile} from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../CONSTANTS/UserConstants'\r\n\r\nconst ProfileScreen = ({location , history}) => {\r\n    const dispatch = useDispatch()\r\n\r\nconst [email , setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [name, setName] = useState('')\r\nconst [confirmpass, setConfirmpass] = useState('')\r\nconst [message, setMessage] = useState(null)\r\n\r\n\r\n\r\nconst userDetails = useSelector((state) => state.userDetails)\r\nconst {loading , error , user} = userDetails\r\n\r\nconst userLogin = useSelector((state) => state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nconst userUpdate = useSelector((state) => state.userUpdate)\r\nconst {success} = userUpdate\r\n\r\nuseEffect(() => { \r\nif(!userInfo){ \r\n    history.push('/login')\r\n} else{\r\n    if(!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        } else { \r\n        setName(user.name)\r\n        setEmail(user.email)\r\n    }\r\n}\r\n\r\n\r\n}, [dispatch,userInfo,history, user])\r\n\r\n\r\n\r\nconst submitHandler =(e) => { \r\ne.preventDefault()\r\nif(password !== confirmpass) { \r\n    setMessage(`passwords do not match ${password} 2: ${confirmpass}`)\r\n} else{ \r\n dispatch(updateUserProfile({id: user._id , name , email , password}))\r\n}\r\n\r\n}\r\n\r\n    return (\r\n     <Row> \r\n         <Col md={3} > \r\n         <h2> User Profile </h2>\r\n            {message && <Message variant = 'danger'>{message}  </Message> }\r\n            {error && <Message variant = 'danger'>{error}  </Message> }\r\n            {success && <Message variant = 'success'>profile updated  </Message> }\r\n\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}> \r\n            <Form.Group controlId = \"name\"> \r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type = \"name\" placeholder=\"name\" value={name} onChange ={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = \"email\"> \r\n                <Form.Label> Email:</Form.Label>\r\n                <Form.Control type = \"email\" placeholder=\"email\" value={email} onChange ={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n                <Form onSubmit={submitHandler}> \r\n                <Form.Group controlId = \"password\"> \r\n                <Form.Label> password:</Form.Label>\r\n                <Form.Control type = \"password\" placeholder=\"password\" value={password} onChange ={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = \"password\"> \r\n                <Form.Label> confirmpassword:</Form.Label>\r\n                <Form.Control type = \"password\" placeholder=\"confirmPassword\" value={confirmpass} onChange ={(e) => setConfirmpass(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type= 'submit' variant = 'primary'>\r\n    UPDATE                    </Button> \r\n            </Form>\r\n         \r\n         </Col>\r\n         <Col md = {9}> \r\n                <h2> My Orders</h2>\r\n         </Col>\r\n     </Row>\r\n      \r\n    )\r\n}\r\n\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js",["171","172","173"],"\r\nimport React,{useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport { Button  , Form} from 'react-bootstrap'\r\nimport Rating from '../component/Rating'\r\nimport {listProductsDetail} from '../actions/productActions'\r\nimport FormContainer from '../component/FormContainer'\r\nimport {saveShippingAddress} from '../actions/cartAction'\r\nimport CheckOutSteps from '../component/checkOutSteps'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\nconst [address , setAddress] = useState(shippingAddress.address)\r\nconst [city , setCity] = useState(shippingAddress.city)\r\nconst [postalCode , setPostalCode] = useState(shippingAddress.postalCode)\r\nconst [country , setCountry] = useState(shippingAddress.country)\r\n\r\n\r\nconst submitHandler = (e) => { \r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({address,city,postalCode,country}))\r\nhistory.push('/payment')\r\n}\r\n    return (\r\n       <FormContainer> \r\n           <CheckOutSteps step1 step2 />\r\n           <h1> Shipping</h1>\r\n\r\n        <Form onSubmit={submitHandler}> \r\n\r\n        <Form.Group controlId = \"address\"> \r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type = \"text\" placeholder=\"address\" value={address} required onChange ={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = \"city\"> \r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control type = \"text\" placeholder=\"City\" value={city} required onChange ={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId = \"PostalCode\"> \r\n                <Form.Label>Postal code</Form.Label>\r\n                <Form.Control type = \"text\" placeholder=\"postal code\" value={postalCode} required onChange ={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = \"country\"> \r\n                <Form.Label>country</Form.Label>\r\n                <Form.Control type = \"text\" placeholder=\"country\" value={country} required onChange ={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type= 'submit' variant = 'primary'>\r\n    continue                    </Button>\r\n        </Form>\r\n       </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\component\\checkOutSteps.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\CONSTANTS\\orderConstants.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\אור\\tech\\Ecommerce\\frontend\\src\\screens\\orderScreen.js",["174","175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":26,"nodeType":"183","messageId":"184","endLine":1,"endColumn":34},{"ruleId":"181","severity":1,"message":"185","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":8,"column":13,"nodeType":"188","endLine":8,"endColumn":58},{"ruleId":"181","severity":1,"message":"189","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":19,"column":8,"nodeType":"183","endLine":19,"endColumn":16},{"ruleId":"190","severity":1,"message":"192","line":19,"column":8,"nodeType":"183","endLine":19,"endColumn":16,"suggestions":"193"},{"ruleId":"181","severity":1,"message":"194","line":1,"column":9,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"195","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":48},{"ruleId":"181","severity":1,"message":"196","line":1,"column":50,"nodeType":"183","messageId":"184","endLine":1,"endColumn":70},{"ruleId":"181","severity":1,"message":"197","line":5,"column":31,"nodeType":"183","messageId":"184","endLine":5,"endColumn":44},{"ruleId":"181","severity":1,"message":"198","line":2,"column":27,"nodeType":"183","messageId":"184","endLine":2,"endColumn":31},{"ruleId":"181","severity":1,"message":"199","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"200","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":27},{"ruleId":"181","severity":1,"message":"199","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"201","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"181","severity":1,"message":"202","line":7,"column":9,"nodeType":"183","messageId":"184","endLine":7,"endColumn":27},{"ruleId":"181","severity":1,"message":"203","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"204","line":14,"column":7,"nodeType":"183","messageId":"184","endLine":14,"endColumn":15},{"ruleId":"181","severity":1,"message":"205","line":21,"column":38,"nodeType":"183","messageId":"184","endLine":21,"endColumn":48},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react/jsx-pascal-case","Imported JSX component img must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'products' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["208"],"'PRODUCT_LIST_FAIL' is defined but never used.","'PRODUCT_LIST_REQUEST' is defined but never used.","'PRODUCT_LIST_SUCCESS' is defined but never used.","'ListGroupItem' is defined but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'Rating' is defined but never used.","'listProductsDetail' is defined but never used.","'Button' is defined but never used.","'sdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"211","text":"212"},[651,659],"[dispatch, match.params.id]"]